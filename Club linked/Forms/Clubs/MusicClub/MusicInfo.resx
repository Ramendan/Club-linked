<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxMAAAsTAQCanBgAAATDSURBVHhe7Z3NihxlFIZH0YULFXWjJv4wVcMEt7mA+DN0
        VRwQQcYLkOAlqBvJPYigIKK3ISQayVQlkYComyiu/ANd6EYFN8bvjK8fVvVb9unTVVoy7wPPInVOv6c4
        30x3ekKmt4QQQgghhBBCCCGEEEL0uX769O1NUb/YFNWltqh+aMv6pkymXWAn5z44c+Y2rGtc2mJRpmGf
        LQ2XHZuy+vTyzv421jYOHxWLh9qi/o4NlMSi/rbd2T+B9W1OCn1/aYhcYXUB69uMdqfa4wPkKg+LxRNY
        Y5z0nPYuC5cOi+ptrDFOCvmShsuVNmX9BdYYJ30H/MrC5Wptd1hjHBYs/WKNcVio9Is1xmGh0i/WGIeF
        Sr9YYxwWKv1ijXFYqPSLNcZhodIv1hiHha5jejPy1WG5eO5w95k7EbkxltUUZ59ti/oGmzkncctxWKhX
        W3772OJeRI3O5Yf37zmaQWbPRdxqHBbq1b7yETMZac5Bf+6cxG3GYaFex3zaGeJqWd/FZs9F3GYcFuoV
        EZPDZs9F3GIcFuoVEZPDZvdtiuq3tqxeOtzde9BMrx0v/3ltnP4hcYtxWKhXREwOm93XFoj2jF1jvea6
        /UPioXFYqFdETA6b3ffDU9UDaM9ce+Tp+1mvuW7/kHhoHBbqFRGTw2b3tacRtGfsH85Zr7lu/5B4aBwW
        6hURk8Nm9x14SnmF9Zrr9g+Jh8ZhoV7/jb+GXt/eu5vN7msvoLZU74vquv1D4jbjsFCv9uMCxExGW1TP
        s9lzEbcZh4W6Leob9uMCRI3OtVNP3Ze+Kr+ms2cibjUOC13H9K1rP6s5sHesiNyYo3e/6St/7ss3cctx
        WKj0izXGYaHSL9YYh4VKv1hjHBYq/WKNcVio9Is1xmGh0i/WGIeFSr9YYxwWKv1ijXFYqPSLNcZhodIv
        1hiHhUq/WGMcFir9Yo1xWKj0izXGYaHSL9YYh4VKv1hjHBZqorwE6zVRzrAeE+UM6zFRXhuWZaKcYT0m
        yh3SxVtYb1PWv6MlDgs2UV6C9ZooZ1iPiXKG9Zgorw3LMlHOsB4T5Q7pog7AC8syUc6wHhPlDumiDsAL
        yzJRzrAeE+UO6aIOwAvLMlHOsB4T5Q7pog7AC8syUc6wHhPlDumiDsALyzJRzrAeE+UO6aIOwAvLMlHO
        sB4T5Q7pog7AC8syUc6wHhPlDumiDsALyzJRzrAeE+UO6aIOwAvLMlHOsB4T5Q7pog7AC8syUc6wHhPl
        DumiDsALyzJRzrAeE+UO6eKcDqD6abm/+hHlzNh9XqaYO7MDqF/v9zZl9RrKmbH7vHjzvH3GvA7g5MEd
        TVG/mW72lyOL+g27hnJm7D4vU8yd1QH8hd2UiT8OMnaflzHnWp3t6D89gOPEpAeQvv3or620/xyHlmOP
        /TcstqP0tPUzWuIM/eLWdDCv3tw6fyvaji22g7SP8/39mGlHn6MtTjrFd1i4XG16CnoLa4zTbJ99koXL
        1V4pqsexxs1Ib0AusAHyHyyq97C+zbla1iePPpSADZJLNkX1DftdExthH8uRXlQ+YQPl3yyqj6/sVo9i
        beNiH1CTBpxLg+wTNb7vDD7epl1UF9OL7guTfYiPEEIIIYQQQgghhPifs7X1B2XW4UvC/Oz0AAAAAElF
        TkSuQmCC
</value>
  </data>
  <data name="RichTextBox2.Text" xml:space="preserve">
    <value>The music club provides a welcoming space for students who share a passion for music, regardless of their skill level or musical background.
It fosters a vibrant musical community, offering opportunities to:

Develop musical skills: Members can hone their instrumental or vocal abilities through individual practice, group rehearsals, and workshops.

Explore different musical genres: Clubs often encompass a variety of musical interests, allowing members to discover new styles and collaborate with musicians of diverse backgrounds.

Perform and share their passion: Clubs provide platforms for members to showcase their talents through concerts, open mic nights, or participation in campus events.

Connect with like-minded individuals: Music clubs create a sense of community, allowing students to build friendships, share their love for music, and potentially form bands or ensembles.</value>
  </data>
</root>