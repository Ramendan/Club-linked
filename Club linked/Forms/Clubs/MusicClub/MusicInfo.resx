<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EQAACxEBf2RfkQAABMNJREFUeF7tnc2KHGUUhkfRhQsVdaMm/jBVwwS3uYD4M3RVHBBBxguQ4CWoG8k9
        iKAgorchJBrJVCWRgKibKK78A13oRgU3xu+Mrx9W9Vv26dNVWjLvA88idU6/pzjfTHd6Qqa3hBBCCCGE
        EEIIIYQQQvS5fvr07U1Rv9gU1aW2qH5oy/qmTKZdYCfnPjhz5jasa1zaYlGmYZ8tDZcdm7L69PLO/jbW
        Ng4fFYuH2qL+jg2UxKL+tt3ZP4H1bU4KfX9piFxhdQHr24x2p9rjA+QqD4vFE1hjnPSc9i4Llw6L6m2s
        MU4K+ZKGy5U2Zf0F1hgnfQf8ysLlam13WGMcFiz9Yo1xWKj0izXGYaHSL9YYh4VKv1hjHBYq/WKNcVio
        9Is1xmGh0i/WGIeFrmN6M/LVYbl47nD3mTsRuTGW1RRnn22L+gabOSdxy3FYqFdbfvvY4l5Ejc7lh/fv
        OZpBZs9F3GocFurVvvIRMxlpzkF/7pzEbcZhoV7HfNoZ4mpZ38Vmz0XcZhwW6hURk8Nmz0XcYhwW6hUR
        k8Nm922K6re2rF463N170EyvHS//eW2c/iFxi3FYqFdETA6b3dcWiPaMXWO95rr9Q+KhcVioV0RMDpvd
        98NT1QNoz1x75On7Wa+5bv+QeGgcFuoVEZPDZve1pxG0Z+wfzlmvuW7/kHhoHBbqFRGTw2b3HXhKeYX1
        muv2D4mHxmGhXv+Nv4Ze3967m83uay+gtlTvi+q6/UPiNuOwUK/24wLETEZbVM+z2XMRtxmHhbot6hv2
        4wJEjc61U0/dl74qv6azZyJuNQ4LXcf0rWs/qzmwd6yI3Jijd7/pK3/uyzdxy3FYqPSLNcZhodIv1hiH
        hUq/WGMcFir9Yo1xWKj0izXGYaHSL9YYh4VKv1hjHBYq/WKNcVio9Is1xmGh0i/WGIeFSr9YYxwWKv1i
        jXFYqPSLNcZhodIv1hiHhUq/WGMcFmqivATrNVHOsB4T5QzrMVFeG5ZlopxhPSbKHdLFW1hvU9a/oyUO
        CzZRXoL1mihnWI+Jcob1mCivDcsyUc6wHhPlDumiDsALyzJRzrAeE+UO6aIOwAvLMlHOsB4T5Q7pog7A
        C8syUc6wHhPlDumiDsALyzJRzrAeE+UO6aIOwAvLMlHOsB4T5Q7pog7AC8syUc6wHhPlDumiDsALyzJR
        zrAeE+UO6aIOwAvLMlHOsB4T5Q7pog7AC8syUc6wHhPlDumiDsALyzJRzrAeE+UO6aIOwAvLMlHOsB4T
        5Q7p4pwOoPppub/6EeXM2H1eppg7swOoX+/3NmX1GsqZsfu8ePO8fca8DuDkwR1NUb+ZbvaXI4v6DbuG
        cmbsPi9TzJ3VAfyF3ZSJPw4ydp+XMedane3oPz2A48SkB5C+/eivrbT/HIeWY4/9Nyy2o/S09TNa4gz9
        4tZ0MK/e3Dp/K9qOLbaDtI/z/f2YaUefoy1OOsV3WLhcbXoKegtrjNNsn32ShcvVXimqx7HGzUhvQC6w
        AfIfLKr3sL7NuVrWJ48+lIANkks2RfUN+10TG2Efy5FeVD5hA+XfLKqPr+xWj2Jt42IfUJMGnEuD7BM1
        vu8MPt6mXVQX04vuC5N9iI8QQgghhBBCCCGE+J+ztfUHZdbhS8L87PQAAAAASUVORK5CYII=
</value>
  </data>
  <data name="RichTextBox2.Text" xml:space="preserve">
    <value>The music club provides a welcoming space for students who share a passion for music, regardless of their skill level or musical background.
It fosters a vibrant musical community, offering opportunities to:

Develop musical skills: Members can hone their instrumental or vocal abilities through individual practice, group rehearsals, and workshops.

Explore different musical genres: Clubs often encompass a variety of musical interests, allowing members to discover new styles and collaborate with musicians of diverse backgrounds.

Perform and share their passion: Clubs provide platforms for members to showcase their talents through concerts, open mic nights, or participation in campus events.

Connect with like-minded individuals: Music clubs create a sense of community, allowing students to build friendships, share their love for music, and potentially form bands or ensembles.</value>
  </data>
</root>